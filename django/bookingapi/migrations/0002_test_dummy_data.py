# Generated by Django 4.1.3 on 2022-11-11 10:51

from django.db import migrations
from django.utils import timezone


def make_dummy_data(apps, schema_editor):
    User = apps.get_model("auth", "User")
    Group = apps.get_model("auth", "Group")
    BookableLocation = apps.get_model("bookingapi", "BookableLocation")
    Seat = apps.get_model("bookingapi", "Seat")
    LocationBooking = apps.get_model("bookingapi", "LocationBooking")
    SeatBooking = apps.get_model("bookingapi", "SeatBooking")

    try:
        user = User.objects.get(username="DummyUser")
    except:
        user = User.objects.create_user(username="DummyUser", password="DummyPassword")

    try:
        Group.objects.get(name="DummyGroup")
    except:
        Group.objects.create(name="DummyGroup")

    try:
        User.groups.get(name="DummyGroup")
    except:
        Group.objects.get(name="DummyGroup").user_set.add(user)

    bookable_location = BookableLocation.objects.create(
        name="DummyLocation", description="DummyDescription", created_by=user
    )
    seat = Seat.objects.create(
        name="DummySeat",
        bookable_location=bookable_location,
        created_by=user,
        description="DummyDescription",
        restricted=False,
    )
    location_booking = LocationBooking.objects.create(
        bookable_location=bookable_location,
        created_by=user,
        start_time=timezone.now() + timezone.timedelta(weeks=52),
        end_time=timezone.now() + timezone.timedelta(weeks=52, days=1),
        event_name="DummyEventName",
        event_description="DummyEventDescription",
    )
    SeatBooking.objects.create(
        customer="DummyCustomer",
        seat=seat,
        location_booking=location_booking,
        created_by=user,
    )


class Migration(migrations.Migration):

    dependencies = [
        ("bookingapi", "0001_initial"),
    ]

    operations = [
        # noop ignores this migration if it's reversed
        migrations.RunPython(make_dummy_data, reverse_code=migrations.RunPython.noop),
    ]
